{"version":3,"file":"static/js/home-view.fac92216.chunk.js","mappings":"yMAGaA,EAAkBC,EAAAA,GAAAA,GAAH,kHAMfC,EAAYD,EAAAA,GAAAA,GAAH,2KAWTE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,iK,kBCjBP,SAASI,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OAC7BC,GAAWC,EAAAA,EAAAA,MAGjB,OAFAC,QAAQC,IAAIH,IAGV,SAACP,EAAD,UACGM,EAAOK,KAAI,SAAAC,GAAK,OACf,SAACV,EAAD,WACE,SAACC,EAAD,CAAWU,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMT,GAArD,SACGK,EAAMK,kBAFKL,EAAME,W,kGCRjBI,E,OAAQjB,GAAAA,GAAH,wG,2BCGH,SAASkB,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KACGC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,WACZF,KAAKH,KACP,KAGD,iCACE,SAACJ,EAAD,2BACCG,IAAS,SAAChB,EAAA,EAAD,CAAYC,OAAQe,S,oLCjB9BO,EAAU,mCACVC,EAAW,+BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAgCC,EAAhC,+BAAsC,GAAIC,EAA1C,+BAAmD,GAAnD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAE6BD,EAASE,OAFtC,gDAE+CC,QAAQC,OAAO,IAAIC,MAAM,cAFxE,2GAKO,SAASC,IACd,OAAOV,EAAiB,GAAD,OAAID,EAAJ,uCAA2CD,IAG7D,SAASa,EAAaC,GAC3B,OAAOZ,EAAiB,GAAD,OAAID,EAAJ,kBAAsBa,EAAtB,oBAAyCd,IAG3D,SAASe,EAAaD,GAC3B,OAAOZ,EAAiB,GAAD,OAAID,EAAJ,kBAAsBa,EAAtB,4BAAiDd,IAEnE,SAASgB,EAAgBF,GAC9B,OAAOZ,EAAiB,GAAD,OAClBD,EADkB,kBACAa,EADA,4BAC2Bd,EAD3B,2BAIlB,SAASiB,EAAiBC,GAC/B,OAAOhB,EAAiB,GAAD,OAClBD,EADkB,+BACaiB,EADb,oBAC8BlB,EAD9B","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","routes/Home/Home.styled.js","routes/Home/Home.jsx","services/Api.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const TrendMoviesList = styled.ol`\n  list-style-type: decimal;\n  list-style-position: inside;\n  margin: 0;\n  padding: 0;\n`;\nexport const MovieItem = styled.li`\n  padding-bottom: 8px;\n  &:hover {\n    color: green;\n  }\n  &::marker {\n    color: #2a363b;\n    font-size: 25px;\n    font-weight: 500;\n  }\n`;\nexport const LinkStyle = styled(Link)`\n  color: #2a363b;\n  font-size: 25px;\n  font-weight: 500;\n  text-decoration: none;\n  &:hover,\n  &:focus {\n    color: #dc6300;\n  }\n`;\n","import { TrendMoviesList, MovieItem, LinkStyle } from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n  console.log(location);\n\n  return (\n    <TrendMoviesList>\n      {movies.map(movie => (\n        <MovieItem key={movie.id}>\n          <LinkStyle to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.original_title}\n          </LinkStyle>\n        </MovieItem>\n      ))}\n    </TrendMoviesList>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  padding-top: 20px;\n  padding-bottom: 20px;\n  color: #dc6300;\n  margin: 0;\n`;\n","import * as API from '../../services/Api';\nimport { Title } from './Home.styled';\nimport MoviesList from '../../components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\n\nexport default function Home() {\n  const [films, setFilms] = useState(null);\n\n  useEffect(() => {\n    API.FetchTrendingFilms()\n      .then(r => r.results)\n      .then(setFilms);\n  }, []);\n\n  return (\n    <>\n      <Title>TOP 20 today</Title>\n      {films && <MoviesList movies={films} />}\n    </>\n  );\n}\n","const API_KEY = 'ac56c60c34a47d94154ddc20710a1d7b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function moviesApiService(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok ? await response.json() : Promise.reject(new Error('Not found'));\n}\n\nexport function FetchTrendingFilms() {\n  return moviesApiService(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n}\n\nexport function getMovieById(movieId) {\n  return moviesApiService(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n}\n\nexport function getMovieCast(movieId) {\n  return moviesApiService(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`);\n}\nexport function getMovieReviews(movieId) {\n  return moviesApiService(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n  );\n}\nexport function getMoviesByQuery(query) {\n  return moviesApiService(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&include_adult=false`,\n  );\n}\n"],"names":["TrendMoviesList","styled","MovieItem","LinkStyle","Link","MoviesList","movies","location","useLocation","console","log","map","movie","to","id","state","from","original_title","Title","Home","useState","films","setFilms","useEffect","API","then","r","results","API_KEY","BASE_URL","moviesApiService","url","config","fetch","response","ok","json","Promise","reject","Error","FetchTrendingFilms","getMovieById","movieId","getMovieCast","getMovieReviews","getMoviesByQuery","query"],"sourceRoot":""}